// Mocks generated by Mockito 5.4.5 from annotations
// in guia_moteis/test/data/repositories/moteis_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:connectivity_plus/connectivity_plus.dart' as _i8;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i9;
import 'package:guia_moteis/data/datasources/local_cache.dart' as _i3;
import 'package:guia_moteis/data/datasources/moteis_local_data_source.dart'
    as _i6;
import 'package:guia_moteis/data/datasources/moteis_remote_data_source.dart'
    as _i4;
import 'package:guia_moteis/data/models/moteis_model.dart' as _i7;
import 'package:guia_moteis/data/services/moteis_api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMoteisApiService_0 extends _i1.SmartFake
    implements _i2.MoteisApiService {
  _FakeMoteisApiService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocalCache_1 extends _i1.SmartFake implements _i3.LocalCache {
  _FakeLocalCache_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MoteisRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoteisRemoteDataSource extends _i1.Mock
    implements _i4.MoteisRemoteDataSource {
  MockMoteisRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MoteisApiService get apiService =>
      (super.noSuchMethod(
            Invocation.getter(#apiService),
            returnValue: _FakeMoteisApiService_0(
              this,
              Invocation.getter(#apiService),
            ),
          )
          as _i2.MoteisApiService);

  @override
  _i5.Future<Map<String, dynamic>> fetchMoteisJson() =>
      (super.noSuchMethod(
            Invocation.method(#fetchMoteisJson, []),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [MoteisLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoteisLocalDataSource extends _i1.Mock
    implements _i6.MoteisLocalDataSource {
  MockMoteisLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.LocalCache get localCache =>
      (super.noSuchMethod(
            Invocation.getter(#localCache),
            returnValue: _FakeLocalCache_1(
              this,
              Invocation.getter(#localCache),
            ),
          )
          as _i3.LocalCache);

  @override
  _i5.Future<_i7.MoteisModel?> getCachedMoteis() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedMoteis, []),
            returnValue: _i5.Future<_i7.MoteisModel?>.value(),
          )
          as _i5.Future<_i7.MoteisModel?>);

  @override
  _i5.Future<void> cacheMoteis(_i7.MoteisModel? moteis) =>
      (super.noSuchMethod(
            Invocation.method(#cacheMoteis, [moteis]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i8.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i9.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i5.Stream<List<_i9.ConnectivityResult>>.empty(),
          )
          as _i5.Stream<List<_i9.ConnectivityResult>>);

  @override
  _i5.Future<List<_i9.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i5.Future<List<_i9.ConnectivityResult>>.value(
              <_i9.ConnectivityResult>[],
            ),
          )
          as _i5.Future<List<_i9.ConnectivityResult>>);
}
